ContextMap Trasporti116117 {
	type = SYSTEM_LANDSCAPE
	state = TO_BE
	
	contains CallCenterContext, PatientContext, TransportContext, VehicleContext

	VehicleContext [SK] <-> [SK] TransportContext

	PatientContext [SK] <-> [SK] TransportContext
	
	CallCenterContext [D] <- [U, OHS, PL] TransportContext {
		implementationTechnology = "RESTful HTTP"
	}

	CallCenterContext [D] <- [U, OHS, PL] PatientContext {
		implementationTechnology = "RESTful HTTP"
	}
	
	CallCenterContext [D] <- [U, OHS, PL] VehicleContext {
		implementationTechnology = "RESTful HTTP"
	}
}

BoundedContext CallCenterContext implements CallCenter{
	type = SYSTEM
	domainVisionStatement = "Handles calls. It also deals with the storage of new transports, vehicles and patients."
	knowledgeLevel = META
}

BoundedContext PatientContext implements Patient{
	type = FEATURE
	domainVisionStatement = "Represents the patient to be transported"
	knowledgeLevel = CONCRETE
	
	Aggregate Patient {
		ValueObject PatientResidence{
			-PatientAddress address
			-PatientCity city
			-PatientDistrict district
			-PatientPostalCode postalCode
		}
		
		ValueObject PatientPersonalData{
			-PatientFiscalCode fiscalCode
			String name
			String surname
			Date dateOfBirth
			-PatientResidence residence
		}
	
		ValueObject Condition{
			String system
			Integer code
		}
		
		ValueObject PatientFiscalCode {
			String fiscalCode
		}
		
		ValueObject PatientAddress {
			String address
		}
		
		ValueObject PatientCity {
			String city
		}
		
		ValueObject PatientDistrict {
			String district
		}
		
		ValueObject PatientPostalCode {
			String postalCode
		}
		
    	Entity Patient {
      		aggregateRoot
      		-PatientPersonalData personalData
      		-Condition patientCondition
      		Repository PatientDTRepository
    	}	
  	}
}

BoundedContext TransportContext implements Transport{
	type = FEATURE 
	domainVisionStatement = "Represents all stages of transport. The life cycle of the transport begins with the booking of the same and ends with the arrival at the destination."
	knowledgeLevel = CONCRETE
	
	Aggregate Transport{
		enum Phase {
			aggregateLifecycle
			Scheduled, InProgress, Completed
		}
		
		ValueObject TransportRoute{
			-Location departure
			-Location destination
		}
		
		ValueObject Location {
			-TransportAddress address
			-TransportCity city
			-TransportDistrict district
			-TransportPostalCode postalCode
		}
		
		ValueObject TransportAddress {
			String address
		}
		
		ValueObject TransportCity {
			String city
		}
		
		ValueObject TransportDistrict {
			String district
		}
		
		ValueObject TransportPostalCode {
			String postalCode
		}
		
		Entity Transport {
			aggregateRoot
			String idTransport
			-TransportRoute route
			-Phase phase
			Date startDateTime
			Date endDateTime
			Repository TransportDTRepository
		}
	}
}

BoundedContext VehicleContext implements Transport{
	type = FEATURE
	domainVisionStatement = "Represents the vehicles and the operator who drives them"
	knowledgeLevel = CONCRETE
	
	Aggregate Ambulance {
		ValueObject Coordinates {
			Double longitude
			Double latitude
		}
		
		enum AmbulanceState {
			aggregateLifecycle
			Busy, Free, UnderMaintenance, Disused
		}
		
		Entity Ambulance {
			aggregateRoot
			String idAmbulance
			-Coordinates coordinates
			-AmbulanceState ambulanceState
			Repository AmbulanceDTRepository
		}
	}
	
	Aggregate TransportOperator {
		ValueObject TransportOperatorResidence{
			-OperatorAddress address
			-OperatorCity city
			-OperatorDistrict district
			-OperatorPostalCode postalCode
		}
		
		ValueObject OperatorAddress {
			String address
		}
		
		ValueObject OperatorCity {
			String city
		}
		
		ValueObject OperatorDistrict {
			String district
		}
		
		ValueObject OperatorPostalCode {
			String postalCode
		}
		
		ValueObject TransportOperatorPersonalData{
			String name
			String surname
			Date dateOfBirth
			-TransportOperatorResidence residence
		}
		
		ValueObject IdTransportOperator {
			String idTransportOperator
		}
		
		Entity TransportOperator{
			aggregateRoot
			String idTransportOperator
			-TransportOperatorPersonalData personalData
			
			Repository TransportOperatorDTRepository
		}

	}
}

Domain Trasporti116117Domain{
	Subdomain CallCenter{
		type GENERIC_SUBDOMAIN
	}

	Subdomain Patient{
		type SUPPORTING_DOMAIN
	}

	Subdomain Transport{
		type CORE_DOMAIN
	}

}